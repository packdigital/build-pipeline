name: netlify-prod-deploy
on: 
  workflow_call:
    secrets:
      NETLIFY_SITE_ID:
        description: "NETLIFY_SITE_ID"
        required: true
      NETLIFY_AUTH_TOKEN:
        description: "NETLIFY_AUTH_TOKEN"
        required: true
      NPM_AUTH_TOKEN:
        description: "NPM_AUTH_TOKEN"
        required: true
      BACKPACK_API_SECRET_TOKEN:
        description: "BACKPACK_API_SECRET_TOKEN"
        required: true
      BACKPACK_SITE_ID:
        description: "BACKPACK_SITE_ID"
        required: true
      CMS_CONTENT_TOKEN:
        description: "CMS_CONTENT_TOKEN"
        required: true
      CMS_MANAGEMENT_TOKEN:
        description: "CMS_MANAGEMENT_TOKEN"
        required: true
      SHOPIFY_DOMAIN:
        description: "SHOPIFY_DOMAIN"
        required: true
      SHOPIFY_ADMIN_API_TOKEN:
        description: "SHOPIFY_ADMIN_API_TOKEN"
        required: true
      SHOPIFY_STOREFRONT_API_TOKEN:
        description: "SHOPIFY_STOREFRONT_API_TOKEN"
        required: true
      SITE_URL:
        description: "SITE_URL"
        required: true
      PACK_API_URL:
        description: "Direct staging deploys to call staging"
        required: false
jobs:
#  job01:
#    name: Job 01
#    runs-on: ubuntu-latest
#    outputs:
#      run_rest_jobs: ${{ steps.set_output.outputs.run_jobs }}
#    steps:
#      - name: Check the NETLIFY_AUTH_TOKEN are setting
#        id: set_output
#        env:
#          NETLIFY_AUTH_TOKEN: ''#${{secrets.NETLIFY_AUTH_TOKEN}}
#        run: |
#          codeChanges="only within certain files"
#          if [[ ! -z "$NETLIFY_AUTH_TOKEN" ]]; then
#            echo "::set-output name=run_jobs::true"
#          else
#            echo "::set-output name=run_jobs::false"
#          fi
  publish:
#    if: needs.job01.outputs.run_rest_jobs == 'true'
#    if: ${{secrets.NETLIFY_AUTH_TOKEN}} != ''
#    runs-on: self-hosted
    runs-on: ubuntu-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{secrets.NETLIFY_AUTH_TOKEN}}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Create and populate .npmrc file
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      run: |
          touch .npmrc
          echo //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN >> .npmrc
      shell: bash
    - name: yarn install
      run: yarn install
    - name: Netlify Deploy
      if: ${{env.NETLIFY_AUTH_TOKEN}} != ''
      run: netlify deploy --build --prod
      env:
        NETLIFY_SITE_ID: ${{secrets.NETLIFY_SITE_ID}}
        NETLIFY_AUTH_TOKEN: ${{secrets.NETLIFY_AUTH_TOKEN}}
        BACKPACK_API_SECRET_TOKEN: ${{secrets.BACKPACK_API_SECRET_TOKEN}}
        BACKPACK_SITE_ID: ${{secrets.BACKPACK_SITE_ID}}
        CMS_CONTENT_TOKEN: ${{secrets.CMS_CONTENT_TOKEN}}
        CMS_MANAGEMENT_TOKEN: ${{secrets.CMS_MANAGEMENT_TOKEN}}
        SHOPIFY_DOMAIN: ${{secrets.SHOPIFY_DOMAIN}}
        SHOPIFY_ADMIN_API_TOKEN: ${{secrets.SHOPIFY_ADMIN_API_TOKEN}}
        SHOPIFY_STOREFRONT_API_TOKEN: ${{secrets.SHOPIFY_STOREFRONT_API_TOKEN}}
        SITE_URL: ${{secrets.SITE_URL}}
        PACK_API_URL: ${{secrets.PACK_API_URL}}

  